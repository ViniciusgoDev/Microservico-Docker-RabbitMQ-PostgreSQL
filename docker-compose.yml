version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - rede-microsservicos
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres:
    image: postgres:16
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: MymicroservicesDb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - rede-microsservicos
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      retries: 5
      timeout: 10s

  notificationservice:
    build:
      context: ./notificationservice
      dockerfile: Dockerfile
    container_name: notificationservice
    ports:
      - "8081:8081"
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_USERNAME=
      - SPRING_RABBITMQ_PASSWORD=
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - rede-microsservicos

  orderservice:
    build:
      context: ./orderservice
      dockerfile: Dockerfile
    container_name: orderservice
    ports:
      - "8082:8080"
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_USERNAME=
      - SPRING_RABBITMQ_PASSWORD=
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/MymicroservicesDb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - rede-microsservicos

  trackingservice:
    build:
      context: ./trackingservice
      dockerfile: Dockerfile
    container_name: trackingservice
    ports:
      - "8083:8083"
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_USERNAME=
      - SPRING_RABBITMQ_PASSWORD=
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - rede-microsservicos

networks:
  rede-microsservicos:

volumes:
  postgres_data:
  rabbitmq_data: